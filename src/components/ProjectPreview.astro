---
import { Image } from "astro:assets";
const { project, slug } = Astro.props;
// Get the image URL from the project data
const images = project.frontmatter?.images;
const imageUrl = images && images[0] ? images[0].url : null;
const imageAlt = images && images[0] ? images[0].alt : "Project preview image";
const imageSource = images && images[0] ? images[0].source : "internal";

// Import the image dynamically
let imageComponent;

try {
  if (imageUrl) {
    if (imageSource === 'external') {
      // For external images, use the URL directly
      imageComponent = imageUrl;
    }

    // Use the direct import for the image
    const imagePath = import.meta.glob(
      "/src/assets/project-images/*.{jpeg,jpg,png,gif}",
    );

    // Try with the URL as is
    let imagePathKey = imageUrl;

    // If the URL doesn't start with a slash but the glob pattern does, add a slash
    if (
      !imageUrl.startsWith("/") &&
      Object.keys(imagePath)[0]?.startsWith("/")
    ) {
      imagePathKey = `/${imageUrl}`;
    }

    if (imagePath[imagePathKey]) {
      const importedImage = await imagePath[imagePathKey]();
      // @ts-ignore - We know this is an image
      imageComponent = importedImage.default;
    }
  }
} catch (error) {
  console.error("Error loading image:", error);
}
---

<a href={`/projects/${slug}`} class="project-preview">
  {
    imageComponent && (
      <Image src={imageComponent} alt={imageAlt} width={400} height={300} />
    )
  }
  <h3>{project.frontmatter?.title}</h3>
  <p>{project.frontmatter?.description}</p>
  <h6>{project.frontmatter?.client}</h6>
  <p>{project.frontmatter?.tags?.join(", ")}</p>
</a>
